!function(){angular.module("app",[])}(),function(){var n=function(n,o){var e=function(){o.emit("pcconnect",null)};n.room="",o.on("requestRoom",function(o){n.room=o}),o.on("deviceOrientation",function(n){var o=(n.username,{});o.gamma=n.gamma,o.beta=n.beta,o.alpha=n.alpha}),n.usernames={},n.checkUserCount=!0,o.on("updateusers",function(o){n.usernames=o,Object.keys(n.usernames).length<4?n.checkUserCount=!0:n.checkUserCount=!1}),function(){e()}()};angular.module("app").controller("socketController",["$scope","socketService",n])}();var Spaceship=function(n,o,e){this.orientation=0,this.gamerId=n,this.x=o,this.y=e};Spaceship.prototype.moveSpaceship=function(n,o){},function(){var n=function(n){"use strict";var o=io.connect(window.location.host),e=function(e,t){o.on(e,function(){var e=arguments;n.$apply(function(){t.apply(o,e)})})},t=function(e,t,a){o.emit(e,t,function(){var e=arguments;n.$apply(function(){a&&a.apply(o,e)})})};return{on:e,emit:t,socket:o}};angular.module("app").factory("socketService",["$rootScope",n])}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImNvbnRyb2xsZXIvc29ja2V0Q29udHJvbGxlci5qcyIsIm1vZGVscy9TcGFjZXNoaXAuanMiLCJzZXJ2aWNlcy9zb2NrZXRTZXJ2aWNlLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJzb2NrZXRDb250cm9sbGVyIiwiJHNjb3BlIiwic29ja2V0U2VydmljZSIsIm1ha2VSb29tIiwiZW1pdCIsInJvb20iLCJvbiIsImRhdGEiLCJkZXZpY2VPcmllbnRhdGlvbiIsInVzZXJuYW1lIiwiZ2FtbWEiLCJiZXRhIiwiYWxwaGEiLCJ1c2VybmFtZXMiLCJjaGVja1VzZXJDb3VudCIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJjb250cm9sbGVyIiwiU3BhY2VzaGlwIiwiZ2FtZXJJZCIsIngiLCJ5IiwidGhpcyIsIm9yaWVudGF0aW9uIiwicHJvdG90eXBlIiwibW92ZVNwYWNlc2hpcCIsIiRyb290U2NvcGUiLCJzb2NrZXQiLCJpbyIsImNvbm5lY3QiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhvc3QiLCJldmVudE5hbWUiLCJjYWxsYmFjayIsImFyZ3MiLCJhcmd1bWVudHMiLCIkYXBwbHkiLCJhcHBseSIsImZhY3RvcnkiXSwibWFwcGluZ3MiOiJDQUdBLFdBRUFBLFFBQUFDLE9BQUEsYUNEQSxXQUNBLEdBQUFDLEdBQUEsU0FBQUMsRUFBQUMsR0FLQSxHQUFBQyxHQUFBLFdBQ0FELEVBQUFFLEtBQUEsWUFBQSxNQUVBSCxHQUFBSSxLQUFBLEdBQ0FILEVBQUFJLEdBQUEsY0FBQSxTQUFBQyxHQUNBTixFQUFBSSxLQUFBRSxJQUVBTCxFQUFBSSxHQUFBLG9CQUFBLFNBQUFDLEdBQ0EsR0FDQUMsSUFEQUQsRUFBQUUsWUFFQUQsR0FBQUUsTUFBQUgsRUFBQUcsTUFDQUYsRUFBQUcsS0FBQUosRUFBQUksS0FDQUgsRUFBQUksTUFBQUwsRUFBQUssUUFFQVgsRUFBQVksYUFDQVosRUFBQWEsZ0JBQUEsRUFDQVosRUFBQUksR0FBQSxjQUFBLFNBQUFDLEdBQ0FOLEVBQUFZLFVBQUFOLEVBQ0FRLE9BQUFDLEtBQUFmLEVBQUFZLFdBQUFJLE9BQUEsRUFDQWhCLEVBQUFhLGdCQUFBLEVBRUFiLEVBQUFhLGdCQUFBLElBS0EsV0FDQVgsT0FLQUwsU0FBQUMsT0FBQSxPQUFBbUIsV0FBQSxvQkFBQSxTQUFBLGdCQUFBbEIsTUN0Q0EsSUFBQW1CLFdBQUEsU0FBQUMsRUFBQUMsRUFBQUMsR0FDQUMsS0FBQUMsWUFBQSxFQUNBRCxLQUFBSCxRQUFBQSxFQUNBRyxLQUFBRixFQUFBQSxFQUNBRSxLQUFBRCxFQUFBQSxFQUdBSCxXQUFBTSxVQUFBQyxjQUFBLFNBQUFMLEVBQUFDLEtDUEEsV0FFQSxHQUFBcEIsR0FBQSxTQUFBeUIsR0FDQSxZQUVBLElBQUFDLEdBQUFDLEdBQUFDLFFBQUFDLE9BQUFDLFNBQUFDLE1BRUEzQixFQUFBLFNBQUE0QixFQUFBQyxHQUNBUCxFQUFBdEIsR0FBQTRCLEVBQUEsV0FDQSxHQUFBRSxHQUFBQyxTQUNBVixHQUFBVyxPQUFBLFdBQ0FILEVBQUFJLE1BQUFYLEVBQUFRLFFBS0FoQyxFQUFBLFNBQUE4QixFQUFBM0IsRUFBQTRCLEdBQ0FQLEVBQUF4QixLQUFBOEIsRUFBQTNCLEVBQUEsV0FDQSxHQUFBNkIsR0FBQUMsU0FDQVYsR0FBQVcsT0FBQSxXQUNBSCxHQUNBQSxFQUFBSSxNQUFBWCxFQUFBUSxPQU9BLFFBQ0E5QixHQUFBQSxFQUNBRixLQUFBQSxFQUNBd0IsT0FBQUEsR0FJQTlCLFNBQUFDLE9BQUEsT0FBQXlDLFFBQUEsaUJBQUEsYUFBQXRDIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgTWljaGllbCBvbiAyNS8xMS8yMDE1LlxuICovXG4oZnVuY3Rpb24oKXtcblxuICAgIHZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZShcImFwcFwiLFtdKTtcbn0pKCk7IiwiLyoqXG4gKiBDcmVhdGVkIGJ5IE1pY2hpZWwgb24gMTEvMTIvMjAxNS5cbiAqL1xuXG4oZnVuY3Rpb24oKXtcbiAgICB2YXIgc29ja2V0Q29udHJvbGxlciA9IGZ1bmN0aW9uKCRzY29wZSwgc29ja2V0U2VydmljZSl7XG5cbiAgICAgICAgLy9wcml2YXRlXG5cbiAgICAgICAgLy9mdW5jdGlvbnNcbiAgICAgICAgdmFyIG1ha2VSb29tID0gZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHNvY2tldFNlcnZpY2UuZW1pdChcInBjY29ubmVjdFwiLCBudWxsKTtcbiAgICAgICAgfTtcbiAgICAgICAgJHNjb3BlLnJvb20gPSBcIlwiO1xuICAgICAgICBzb2NrZXRTZXJ2aWNlLm9uKCdyZXF1ZXN0Um9vbScsZnVuY3Rpb24oZGF0YSl7XG4gICAgICAgICAgICAkc2NvcGUucm9vbSA9IGRhdGE7XG4gICAgICAgIH0pO1xuICAgICAgICBzb2NrZXRTZXJ2aWNlLm9uKCdkZXZpY2VPcmllbnRhdGlvbicsIGZ1bmN0aW9uKGRhdGEpe1xuICAgICAgICAgICAgdmFyIHVzZXJuYW1lID0gZGF0YS51c2VybmFtZTtcbiAgICAgICAgICAgIHZhciBkZXZpY2VPcmllbnRhdGlvbiA9IHt9O1xuICAgICAgICAgICAgZGV2aWNlT3JpZW50YXRpb24uZ2FtbWEgPSBkYXRhLmdhbW1hO1xuICAgICAgICAgICAgZGV2aWNlT3JpZW50YXRpb24uYmV0YSA9IGRhdGEuYmV0YTtcbiAgICAgICAgICAgIGRldmljZU9yaWVudGF0aW9uLmFscGhhID0gZGF0YS5hbHBoYTtcbiAgICAgICAgfSk7XG4gICAgICAgICRzY29wZS51c2VybmFtZXMgPSB7fTtcbiAgICAgICAgJHNjb3BlLmNoZWNrVXNlckNvdW50ID0gdHJ1ZTtcbiAgICAgICAgc29ja2V0U2VydmljZS5vbigndXBkYXRldXNlcnMnLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgJHNjb3BlLnVzZXJuYW1lcyA9IGRhdGE7XG4gICAgICAgICAgICBpZihPYmplY3Qua2V5cygkc2NvcGUudXNlcm5hbWVzKS5sZW5ndGggPCA0KXtcbiAgICAgICAgICAgICAgICAkc2NvcGUuY2hlY2tVc2VyQ291bnQgPSB0cnVlO1xuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgJHNjb3BlLmNoZWNrVXNlckNvdW50ID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG5cbiAgICAgICAgKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgbWFrZVJvb20oKTtcbiAgICAgICAgfSkoKTtcblxuICAgIH07XG5cbiAgICBhbmd1bGFyLm1vZHVsZShcImFwcFwiKS5jb250cm9sbGVyKFwic29ja2V0Q29udHJvbGxlclwiLCBbXCIkc2NvcGVcIiwgXCJzb2NrZXRTZXJ2aWNlXCIsIHNvY2tldENvbnRyb2xsZXJdKTtcbn0pKCk7IiwiLyoqXG4gKiBDcmVhdGVkIGJ5IGp1c3Rpam5kZXBvdmVyIG9uIDA5LzEyLzE1LlxuICovXG5cbnZhciBTcGFjZXNoaXAgPSBmdW5jdGlvbihnYW1lcklkLCB4LCB5KXtcbiAgICB0aGlzLm9yaWVudGF0aW9uID0gMDtcbiAgICB0aGlzLmdhbWVySWQgPSBnYW1lcklkO1xuICAgIHRoaXMueCA9IHg7XG4gICAgdGhpcy55ID0geTtcbn07XG5cblNwYWNlc2hpcC5wcm90b3R5cGUubW92ZVNwYWNlc2hpcCA9IGZ1bmN0aW9uKHgsIHkpe1xuICAgIC8vbW92ZSB0aGUgc3BhY2VzaGlwIG9uIHRoZSBjYW52YXNcblxufTsiLCIvKipcbiAqIENyZWF0ZWQgYnkganVzdGlqbmRlcG92ZXIgb24gMDkvMTIvMTUuXG4gKi9cblxuKGZ1bmN0aW9uKCl7XG5cbiAgICB2YXIgc29ja2V0U2VydmljZSA9IGZ1bmN0aW9uKCRyb290U2NvcGUpe1xuICAgICAgICBcInVzZSBzdHJpY3RcIjtcbiAgICAgICAgLy9wcml2YXRlXG4gICAgICAgIHZhciBzb2NrZXQgPSBpby5jb25uZWN0KHdpbmRvdy5sb2NhdGlvbi5ob3N0KTtcbiAgICAgICAgLy9mdW5jdGlvbnNcbiAgICAgICAgdmFyIG9uID0gZnVuY3Rpb24gKGV2ZW50TmFtZSwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHNvY2tldC5vbihldmVudE5hbWUsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgYXJncyA9IGFyZ3VtZW50cztcbiAgICAgICAgICAgICAgICAkcm9vdFNjb3BlLiRhcHBseShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrLmFwcGx5KHNvY2tldCwgYXJncyk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcblxuICAgICAgICB2YXIgZW1pdCA9IGZ1bmN0aW9uIChldmVudE5hbWUsIGRhdGEsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICBzb2NrZXQuZW1pdChldmVudE5hbWUsIGRhdGEsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgYXJncyA9IGFyZ3VtZW50cztcbiAgICAgICAgICAgICAgICAkcm9vdFNjb3BlLiRhcHBseShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2suYXBwbHkoc29ja2V0LCBhcmdzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfTtcblxuICAgICAgICAvL3B1YmxpY1xuICAgICAgICByZXR1cm57XG4gICAgICAgICAgICBvbjogb24sXG4gICAgICAgICAgICBlbWl0OiBlbWl0LFxuICAgICAgICAgICAgc29ja2V0OiBzb2NrZXRcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBhbmd1bGFyLm1vZHVsZShcImFwcFwiKS5mYWN0b3J5KFwic29ja2V0U2VydmljZVwiLCBbXCIkcm9vdFNjb3BlXCIsIHNvY2tldFNlcnZpY2VdKTtcblxufSkoKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
