!function(){angular.module("app",[])}(),function(){var n=function(n,t,e){n.LCShow=e.getLCShow;var o=function(){t.emit("pcconnect",null)};n.room="",t.on("requestRoom",function(t){n.room=t}),t.on("deviceOrientation",function(n){var t=(n.username,{});t.gamma=n.gamma,t.beta=n.beta,t.alpha=n.alpha}),n.usernames={},n.checkUserCount=!0,t.on("updateusers",function(t){n.usernames=t,n.checkUserCount=Object.keys(n.usernames).length<4}),n.startGame=function(){t.emit("startGame",null),e.setLCShow(!1),e.setPCShow(!0)},function(){o()}()};angular.module("app").controller("loginController",["$scope","socketService","displayService",n])}(),function(){"use strict";var n=function(n,t,e){n.PCShow=e.getPCShow,n.startGame=!1};angular.module("app").controller("playController",["$scope","socketService","displayService",n])}(),function(){var n=function(){return{restrict:"E",replace:!0,template:'<canvas class="playArea" />'}};angular.module("app").directive("canvasDirective",[n])}(),function(){var n=function(){var n=!0,t=!1;return{getLCShow:function(){return n},setLCShow:function(t){n=t},getPCShow:function(){return t},setPCShow:function(n){t=n}}};angular.module("app").factory("displayService",[n])}();var Spaceship=function(n,t,e){this.orientation=0,this.gamerId=n,this.x=t,this.y=e};Spaceship.prototype.moveSpaceship=function(n,t){},function(){var n=function(n){"use strict";var t=io.connect(window.location.host),e=function(e,o){t.on(e,function(){var e=arguments;n.$apply(function(){o.apply(t,e)})})},o=function(e,o,a){t.emit(e,o,function(){var e=arguments;n.$apply(function(){a&&a.apply(t,e)})})};return{on:e,emit:o,socket:t}};angular.module("app").factory("socketService",["$rootScope",n])}();
//# sourceMappingURL=data:application/json;base64,
