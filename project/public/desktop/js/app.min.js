!function(){angular.module("app",[])}(),function(){var t=function(t,e,a,i){t.LCShow=a.getLCShow;var n=function(){e.emit("pcconnect",null)};t.room="",e.on("requestRoom",function(e){t.room=e}),e.on("deviceOrientation",function(t){var e=(t.username,{});e.gamma=t.gamma,e.beta=t.beta,e.alpha=t.alpha}),t.usernames={},t.checkUserCount=!1,e.on("updateusers",function(e){i.setPlayers(e),t.usernames=e,t.checkUserCount=Object.keys(t.usernames).length<0}),t.startGame=function(){e.emit("startGame",null),a.setLCShow(!1),a.setPCShow(!0)},function(){n()}()};angular.module("app").controller("loginController",["$scope","socketService","displayService","playerService",t])}(),function(){"use strict";var t=function(t,e,a,i,n,o){function r(t,e){return e.username==t.userName?!0:!1}function s(){p.clearRect(0,0,c.width,c.height);var t=c.width/100;if(0!=l.length){var e=c.width/100,a=e*l[0].image.height/l[0].image.width;for(var i in l){var n=l[i];p.save(),p.translate(n.x*t,n.y*t),p.rotate(n.rotation/180*Math.PI),p.drawImage(n.image,-e/2,-a/2,e,a),p.restore(),l[i].x=Math.cos((n.rotation-90)/180*Math.PI)+n.x,l[i].y=Math.sin((n.rotation-90)/180*Math.PI)+n.y}}if(0!=u.length){var o=c.width/20,r=o*u[0].image.height/u[0].image.width;for(var s in u){var h=u[s];p.save(),p.translate(h.x*t,h.y*t),p.rotate(h.rotation/180*Math.PI),p.drawImage(h.image,-o/2,-r/2,o,r),p.restore(),u[s].x=Math.cos((h.rotation-90)/180*Math.PI)/10*h.speed+h.x,u[s].y=Math.sin((h.rotation-90)/180*Math.PI)/10*h.speed+h.y}}}t.PCShow=n.getPCShow,t.startGame=!1;var h,c=document.getElementById("game"),p=c.getContext("2d"),u=new Array,l=new Array;i.on("initGame",function(){var t=o.getPlayers();for(var a in t){var i=t[a];u.push(new Spaceship(i.username,i.posX,i.posY,i.color,i.rotation))}h=e(s,10),console.log(u)}),i.on("updateGameData",function(t){var e=null;for(var a in u)1==r(u[a],t)&&(e=a);null!=e&&u[e].rotateSpaceshipRelative(t.orientation)}),i.on("playerShot",function(t){var e=null;for(var a in u)1==r(u[a],t)&&(e=a);if(null!=e){var i=u[e];l.push(new Bullet(i.x,i.y,i.rotation,i.color))}})};angular.module("app").controller("playController",["$scope","$interval","$window","socketService","displayService","playerService",t])}(),function(){var t=function(t){function e(e,a,i){t.innerWidth<t.innerHeight?e.width=t.innerWidth-20:e.width=t.innerHeight-20,angular.element(t).bind("resize",function(){t.innerWidth<t.innerHeight?e.width=t.innerWidth-20:e.width=t.innerHeight-20,e.$digest()})}return{restrict:"E",link:e,replace:!0,template:'<canvas id="game" class="playArea" width="{{width}}" height="{{width}}" />'}};angular.module("app").directive("canvasDirective",["$window",t])}(),function(){var t=function(){var t=!0,e=!1;return{getLCShow:function(){return t},setLCShow:function(e){t=e},getPCShow:function(){return e},setPCShow:function(t){e=t}}};angular.module("app").factory("displayService",[t])}(),function(){var t=function(){var t=[];return{getPlayers:function(){return t},setPlayers:function(e){t=e}}};angular.module("app").factory("playerService",[t])}();var Bullet=function(t,e,a,i){this.x=t,this.y=e,this.rotation=a,this.image=new Image,this.color=i,"orange"==this.color&&(this.color="red"),this.image.src="../assets/PNG/Lasers/laser"+this.color.charAt(0).toUpperCase()+this.color.slice(1)+"01.png"},Spaceship=function(t,e,a,i,n){this.userName=t,this.x=e,this.y=a,this.speed=1,this.color=i,this.rotation=n,this.image=new Image,this.damage=0,this.damageImage=new Image,this.image.src="../assets/PNG/playerShip1_"+this.color+".png"};Spaceship.prototype.moveSpaceship=function(t,e){this.x=t,this.y=e},Spaceship.prototype.moveSpaceshipRelative=function(t,e){this.x=this.x+t,this.y=this.y+e},Spaceship.prototype.rotateSpaceship=function(t){this.rotation=t},Spaceship.prototype.rotateSpaceshipRelative=function(t){this.rotation=this.rotation+t/5,this.rotation<-360&&(this.rotation=this.rotation+720),this.rotation>360&&(this.rotation=this.rotation-720)},Spaceship.prototype.increaseDamage=function(){this.damage<4&&(this.damage+=1),this.damage<=3&&this.damage>0&&(this.damageImage.src="../assets/PNG/Damage/playerShip1_damage"+this.damage+".png")},Spaceship.prototype.increaseDamage=function(){this.damage>0&&(this.damage-=1),this.damage<=3&&this.damage>0&&(this.damageImage.src="../assets/PNG/Damage/playerShip1_damage"+this.damage+".png")},function(){var t=function(t){"use strict";var e=io.connect(window.location.host),a=function(a,i){e.on(a,function(){var a=arguments;t.$apply(function(){i.apply(e,a)})})},i=function(a,i,n){e.emit(a,i,function(){var a=arguments;t.$apply(function(){n&&n.apply(e,a)})})};return{on:a,emit:i,socket:e}};angular.module("app").factory("socketService",["$rootScope",t])}();
//# sourceMappingURL=data:application/json;base64,
