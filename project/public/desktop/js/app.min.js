!function(){angular.module("app",[])}(),function(){var e=function(e,n,t,o){e.LCShow=t.getLCShow;var r=function(){n.emit("pcconnect",null)};e.room="",n.on("requestRoom",function(n){e.room=n}),n.on("deviceOrientation",function(e){var n=(e.username,{});n.gamma=e.gamma,n.beta=e.beta,n.alpha=e.alpha}),e.usernames={},e.checkUserCount=!1,n.on("updateusers",function(n){o.setPlayers(n),e.usernames=n,e.checkUserCount=Object.keys(e.usernames).length<0}),e.startGame=function(){n.emit("startGame",null),t.setLCShow(!1),t.setPCShow(!0)},function(){r()}()};angular.module("app").controller("loginController",["$scope","socketService","displayService","playerService",e])}(),function(){"use strict";var e=function(e,n,t,o,r){e.PCShow=o.getPCShow,e.startGame=!1;var i=document.getElementById("game"),a=i.getContext("2d");t.on("gameCycle",function(){var e=r.getPlayers(),n=i.width/100;for(var t in e){var o=new Image;o.user=e[t],o.onload=function(){a.rotate(this.user.rotation*Math.PI/180),a.drawImage(this,this.user.posX*n,this.user.posY*n),a.rotate(-(this.user.rotation*Math.PI/180))},o.src="../assets/PNG/playerShip1_"+e[t].color+".png"}})};angular.module("app").controller("playController",["$scope","$window","socketService","displayService","playerService",e])}(),function(){var e=function(e){function n(n,t,o){e.innerWidth<e.innerHeight?n.width=e.innerWidth-20:n.width=e.innerHeight-20,angular.element(e).bind("resize",function(){e.innerWidth<e.innerHeight?n.width=e.innerWidth-20:n.width=e.innerHeight-20,n.$digest()})}return{restrict:"E",link:n,replace:!0,template:'<canvas id="game" class="playArea" width="{{width}}" height="{{width}}" />'}};angular.module("app").directive("canvasDirective",["$window",e])}();var Spaceship=function(e,n,t){this.orientation=0,this.gamerId=e,this.x=n,this.y=t};Spaceship.prototype.moveSpaceship=function(e,n){},function(){var e=function(){var e=!0,n=!1;return{getLCShow:function(){return e},setLCShow:function(n){e=n},getPCShow:function(){return n},setPCShow:function(e){n=e}}};angular.module("app").factory("displayService",[e])}(),function(){var e=function(){var e=[];return{getPlayers:function(){return e},setPlayers:function(n){e=n}}};angular.module("app").factory("playerService",[e])}(),function(){var e=function(e){"use strict";var n=io.connect(window.location.host),t=function(t,o){n.on(t,function(){var t=arguments;e.$apply(function(){o.apply(n,t)})})},o=function(t,o,r){n.emit(t,o,function(){var t=arguments;e.$apply(function(){r&&r.apply(n,t)})})};return{on:t,emit:o,socket:n}};angular.module("app").factory("socketService",["$rootScope",e])}();
//# sourceMappingURL=data:application/json;base64,
