!function(){angular.module("app",[])}(),function(){var o=function(o,n){o.LCShow=!0,n.on("startGame",function(o){console.log("start game")}),n.on("roomDisconnect",function(o){}),o.joinRoom=function(e,t){var a={};a.username=e,a.room=t.toUpperCase(),console.log("join room"),o.LCShow=!1,o.PCShow=!0,n.emit("gsmConnect",a)}};angular.module("app").controller("loginController",["$scope","socketService",o])}(),function(){"use strict";var o=function(o,n,e,t){o.PCShow=!1,o.shoot=function(){};var a=function(o){var n={};n.gamma=o.gamma,n.beta=o.beta,n.alpha=o.alpha,e.emit("deviceOrientation",n)};t.subscribeMe(),n.$on("app.deviceorientationEvent",function(o,n){a(n)}),o.leaveRoom=function(){e.emit("gsmDisconnect",null)}};angular.module("app").controller("playController",["$scope","$rootScope","socketService","eventService",o])}(),function(){var o=function(o,n){function e(){n.addEventListener("deviceorientation",function(n){o.$broadcast("app.deviceorientationEvent",n)})}return{subscribeMe:e}};angular.module("app").factory("eventService",["$rootScope","$window",o])}(),function(){var o=function(o){"use strict";var n=io.connect(window.location.host),e=function(e,t){n.on(e,function(){var e=arguments;o.$apply(function(){t.apply(n,e)})})},t=function(e,t,a){n.emit(e,t,function(){var e=arguments;o.$apply(function(){a&&a.apply(n,e)})})};return{on:e,emit:t,socket:n}};angular.module("app").factory("socketService",["$rootScope",o])}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImNvbnRyb2xsZXIvbG9naW5Db250cm9sbGVyLmpzIiwiY29udHJvbGxlci9wbGF5Q29udHJvbGxlci5qcyIsInNlcnZpY2VzL2V2ZW50U2VydmljZS5qcyIsInNlcnZpY2VzL3NvY2tldFNlcnZpY2UuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImxvZ2luQ29udHJvbGxlciIsIiRzY29wZSIsInNvY2tldFNlcnZpY2UiLCJMQ1Nob3ciLCJvbiIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwiam9pblJvb20iLCJ1c2VybmFtZSIsInJvb20iLCJ0b1VwcGVyQ2FzZSIsIlBDU2hvdyIsImVtaXQiLCJjb250cm9sbGVyIiwicGxheUNvbnRyb2xsZXIiLCIkcm9vdFNjb3BlIiwiZXZlbnRTZXJ2aWNlIiwic2hvb3QiLCJzZW5kRGV2aWNlT3JpZW50YXRpb24iLCJldmVudERhdGEiLCJnYW1tYSIsImJldGEiLCJhbHBoYSIsInN1YnNjcmliZU1lIiwiJG9uIiwiYSIsImIiLCJsZWF2ZVJvb20iLCIkd2luZG93Iiwic3Vic0Z1bmMiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsIiRicm9hZGNhc3QiLCJmYWN0b3J5Iiwic29ja2V0IiwiaW8iLCJjb25uZWN0Iiwid2luZG93IiwibG9jYXRpb24iLCJob3N0IiwiZXZlbnROYW1lIiwiY2FsbGJhY2siLCJhcmdzIiwiYXJndW1lbnRzIiwiJGFwcGx5IiwiYXBwbHkiXSwibWFwcGluZ3MiOiJDQUdBLFdBRUFBLFFBQUFDLE9BQUEsYUNBQSxXQUVBLEdBQUFDLEdBQUEsU0FBQUMsRUFBQUMsR0FDQUQsRUFBQUUsUUFBQSxFQUVBRCxFQUFBRSxHQUFBLFlBQUEsU0FBQUMsR0FDQUMsUUFBQUMsSUFBQSxnQkFFQUwsRUFBQUUsR0FBQSxpQkFBQSxTQUFBQyxNQUlBSixFQUFBTyxTQUFBLFNBQUFDLEVBQUFDLEdBQ0EsR0FBQUwsS0FDQUEsR0FBQUksU0FBQUEsRUFDQUosRUFBQUssS0FBQUEsRUFBQUMsY0FDQUwsUUFBQUMsSUFBQSxhQUNBTixFQUFBRSxRQUFBLEVBQ0FGLEVBQUFXLFFBQUEsRUFDQVYsRUFBQVcsS0FBQSxhQUFBUixJQUtBUCxTQUFBQyxPQUFBLE9BQUFlLFdBQUEsbUJBQUEsU0FBQSxnQkFBQWQsT0N4QkEsV0FDQSxZQUNBLElBQUFlLEdBQUEsU0FBQWQsRUFBQWUsRUFBQWQsRUFBQWUsR0FDQWhCLEVBQUFXLFFBQUEsRUFFQVgsRUFBQWlCLE1BQUEsWUFJQSxJQUFBQyxHQUFBLFNBQUFDLEdBQ0EsR0FBQWYsS0FDQUEsR0FBQWdCLE1BQUFELEVBQUFDLE1BQ0FoQixFQUFBaUIsS0FBQUYsRUFBQUUsS0FDQWpCLEVBQUFrQixNQUFBSCxFQUFBRyxNQUNBckIsRUFBQVcsS0FBQSxvQkFBQVIsR0FFQVksR0FBQU8sY0FDQVIsRUFBQVMsSUFBQSw2QkFBQSxTQUFBQyxFQUFBQyxHQUNBUixFQUFBUSxLQUdBMUIsRUFBQTJCLFVBQUEsV0FDQTFCLEVBQUFXLEtBQUEsZ0JBQUEsT0FJQWYsU0FBQUMsT0FBQSxPQUFBZSxXQUFBLGtCQUFBLFNBQUEsYUFBQSxnQkFBQSxlQUFBQyxPQzVCQSxXQUNBLEdBQUFFLEdBQUEsU0FBQUQsRUFBQWEsR0FDQSxRQUFBQyxLQUNBRCxFQUFBRSxpQkFBQSxvQkFBQSxTQUFBQyxHQUNBaEIsRUFBQWlCLFdBQUEsNkJBQUFELEtBSUEsT0FDQVIsWUFBQU0sR0FHQWhDLFNBQUFDLE9BQUEsT0FBQW1DLFFBQUEsZ0JBQUEsYUFBQSxVQUFBakIsT0NYQSxXQUVBLEdBQUFmLEdBQUEsU0FBQWMsR0FDQSxZQUVBLElBQUFtQixHQUFBQyxHQUFBQyxRQUFBQyxPQUFBQyxTQUFBQyxNQUVBcEMsRUFBQSxTQUFBcUMsRUFBQUMsR0FDQVAsRUFBQS9CLEdBQUFxQyxFQUFBLFdBQ0EsR0FBQUUsR0FBQUMsU0FDQTVCLEdBQUE2QixPQUFBLFdBQ0FILEVBQUFJLE1BQUFYLEVBQUFRLFFBS0E5QixFQUFBLFNBQUE0QixFQUFBcEMsRUFBQXFDLEdBQ0FQLEVBQUF0QixLQUFBNEIsRUFBQXBDLEVBQUEsV0FDQSxHQUFBc0MsR0FBQUMsU0FDQTVCLEdBQUE2QixPQUFBLFdBQ0FILEdBQ0FBLEVBQUFJLE1BQUFYLEVBQUFRLE9BT0EsUUFDQXZDLEdBQUFBLEVBQ0FTLEtBQUFBLEVBQ0FzQixPQUFBQSxHQUlBckMsU0FBQUMsT0FBQSxPQUFBbUMsUUFBQSxpQkFBQSxhQUFBaEMiLCJmaWxlIjoiYXBwLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSBNaWNoaWVsIG9uIDI1LzExLzIwMTUuXG4gKi9cbihmdW5jdGlvbigpe1xuXG4gICAgdmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKFwiYXBwXCIsW10pO1xufSkoKTsiLCIvKipcbiAqIENyZWF0ZWQgYnkganVzdGlqbmRlcG92ZXIgb24gMTYvMTIvMTUuXG4gKi9cblxuXG4oZnVuY3Rpb24oKXtcblxuICAgIHZhciBsb2dpbkNvbnRyb2xsZXIgPSBmdW5jdGlvbigkc2NvcGUsIHNvY2tldFNlcnZpY2Upe1xuICAgICAgICAkc2NvcGUuTENTaG93ID0gdHJ1ZTtcbiAgICAgICAgLy9mdW5jdGlvbnNcbiAgICAgICAgc29ja2V0U2VydmljZS5vbihcInN0YXJ0R2FtZVwiLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJzdGFydCBnYW1lXCIpO1xuICAgICAgICB9KTtcbiAgICAgICAgc29ja2V0U2VydmljZS5vbihcInJvb21EaXNjb25uZWN0XCIsIGZ1bmN0aW9uIChkYXRhKSB7XG5cbiAgICAgICAgfSk7XG5cbiAgICAgICAgJHNjb3BlLmpvaW5Sb29tID0gZnVuY3Rpb24odXNlcm5hbWUsIHJvb20pe1xuICAgICAgICAgICAgdmFyIGRhdGEgPSB7fTtcbiAgICAgICAgICAgIGRhdGEudXNlcm5hbWUgPSB1c2VybmFtZTtcbiAgICAgICAgICAgIGRhdGEucm9vbSA9IHJvb20udG9VcHBlckNhc2UoKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiam9pbiByb29tXCIpO1xuICAgICAgICAgICAgJHNjb3BlLkxDU2hvdyA9IGZhbHNlO1xuICAgICAgICAgICAgJHNjb3BlLlBDU2hvdyA9IHRydWU7XG4gICAgICAgICAgICBzb2NrZXRTZXJ2aWNlLmVtaXQoXCJnc21Db25uZWN0XCIsIGRhdGEpO1xuXG4gICAgICAgIH07XG4gICAgfTtcblxuICAgIGFuZ3VsYXIubW9kdWxlKFwiYXBwXCIpLmNvbnRyb2xsZXIoXCJsb2dpbkNvbnRyb2xsZXJcIiwgW1wiJHNjb3BlXCIsIFwic29ja2V0U2VydmljZVwiLCBsb2dpbkNvbnRyb2xsZXJdKTtcbn0pKCk7IiwiLyoqXG4gKiBDcmVhdGVkIGJ5IGp1c3Rpam5kZXBvdmVyIG9uIDE2LzEyLzE1LlxuICovXG5cblxuKGZ1bmN0aW9uKCl7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgdmFyIHBsYXlDb250cm9sbGVyID0gZnVuY3Rpb24oJHNjb3BlLCAkcm9vdFNjb3BlLCBzb2NrZXRTZXJ2aWNlLCBldmVudFNlcnZpY2Upe1xuICAgICAgICAkc2NvcGUuUENTaG93ID0gZmFsc2U7XG5cbiAgICAgICAgJHNjb3BlLnNob290ID0gZnVuY3Rpb24oKXtcblxuICAgICAgICB9O1xuXG4gICAgICAgIHZhciBzZW5kRGV2aWNlT3JpZW50YXRpb24gPSBmdW5jdGlvbihldmVudERhdGEpe1xuICAgICAgICAgICAgdmFyIGRhdGEgPSB7fTtcbiAgICAgICAgICAgIGRhdGEuZ2FtbWEgPSBldmVudERhdGEuZ2FtbWE7XG4gICAgICAgICAgICBkYXRhLmJldGEgPSBldmVudERhdGEuYmV0YTtcbiAgICAgICAgICAgIGRhdGEuYWxwaGEgPSBldmVudERhdGEuYWxwaGE7XG4gICAgICAgICAgICBzb2NrZXRTZXJ2aWNlLmVtaXQoXCJkZXZpY2VPcmllbnRhdGlvblwiLCBkYXRhKVxuICAgICAgICB9O1xuICAgICAgICBldmVudFNlcnZpY2Uuc3Vic2NyaWJlTWUoKTtcbiAgICAgICAgJHJvb3RTY29wZS4kb24oJ2FwcC5kZXZpY2VvcmllbnRhdGlvbkV2ZW50JywgZnVuY3Rpb24oYSwgYikge1xuICAgICAgICAgICAgc2VuZERldmljZU9yaWVudGF0aW9uKGIpO1xuICAgICAgICB9KTtcblxuICAgICAgICAkc2NvcGUubGVhdmVSb29tID0gZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHNvY2tldFNlcnZpY2UuZW1pdChcImdzbURpc2Nvbm5lY3RcIiwgbnVsbCk7XG4gICAgICAgIH07XG4gICAgfTtcblxuICAgIGFuZ3VsYXIubW9kdWxlKFwiYXBwXCIpLmNvbnRyb2xsZXIoXCJwbGF5Q29udHJvbGxlclwiLCBbXCIkc2NvcGVcIiwgXCIkcm9vdFNjb3BlXCIsIFwic29ja2V0U2VydmljZVwiLCBcImV2ZW50U2VydmljZVwiLCBwbGF5Q29udHJvbGxlcl0pXG59KSgpOyIsIi8qKlxuICogQ3JlYXRlZCBieSBNaWNoaWVsIG9uIDE2LzEyLzIwMTUuXG4gKi9cbihmdW5jdGlvbigpe1xuICAgIHZhciBldmVudFNlcnZpY2UgPSBmdW5jdGlvbigkcm9vdFNjb3BlLCR3aW5kb3cpe1xuICAgICAgICBmdW5jdGlvbiBzdWJzRnVuYygpIHtcbiAgICAgICAgICAgICR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignZGV2aWNlb3JpZW50YXRpb24nLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAgICAgJHJvb3RTY29wZS4kYnJvYWRjYXN0KCdhcHAuZGV2aWNlb3JpZW50YXRpb25FdmVudCcsIGUpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBcInN1YnNjcmliZU1lXCI6IHN1YnNGdW5jXG4gICAgICAgIH1cbiAgICB9O1xuICAgIGFuZ3VsYXIubW9kdWxlKFwiYXBwXCIpLmZhY3RvcnkoXCJldmVudFNlcnZpY2VcIiwgW1wiJHJvb3RTY29wZVwiLFwiJHdpbmRvd1wiLCBldmVudFNlcnZpY2VdKTtcbn0pKCk7IiwiLyoqXG4gKiBDcmVhdGVkIGJ5IGp1c3Rpam5kZXBvdmVyIG9uIDA5LzEyLzE1LlxuICovXG5cbihmdW5jdGlvbigpe1xuXG4gICAgdmFyIHNvY2tldFNlcnZpY2UgPSBmdW5jdGlvbigkcm9vdFNjb3BlKXtcbiAgICAgICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgICAgIC8vcHJpdmF0ZVxuICAgICAgICB2YXIgc29ja2V0ID0gaW8uY29ubmVjdCh3aW5kb3cubG9jYXRpb24uaG9zdCk7XG4gICAgICAgIC8vZnVuY3Rpb25zXG4gICAgICAgIHZhciBvbiA9IGZ1bmN0aW9uIChldmVudE5hbWUsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICBzb2NrZXQub24oZXZlbnROYW1lLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgICAgICAgICAgICAgJHJvb3RTY29wZS4kYXBwbHkoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjay5hcHBseShzb2NrZXQsIGFyZ3MpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgdmFyIGVtaXQgPSBmdW5jdGlvbiAoZXZlbnROYW1lLCBkYXRhLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgc29ja2V0LmVtaXQoZXZlbnROYW1lLCBkYXRhLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgICAgICAgICAgICAgJHJvb3RTY29wZS4kYXBwbHkoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrLmFwcGx5KHNvY2tldCwgYXJncyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH07XG5cbiAgICAgICAgLy9wdWJsaWNcbiAgICAgICAgcmV0dXJue1xuICAgICAgICAgICAgb246IG9uLFxuICAgICAgICAgICAgZW1pdDogZW1pdCxcbiAgICAgICAgICAgIHNvY2tldDogc29ja2V0XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgYW5ndWxhci5tb2R1bGUoXCJhcHBcIikuZmFjdG9yeShcInNvY2tldFNlcnZpY2VcIiwgW1wiJHJvb3RTY29wZVwiLCBzb2NrZXRTZXJ2aWNlXSk7XG5cbn0pKCk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
