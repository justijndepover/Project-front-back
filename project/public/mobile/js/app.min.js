!function(){angular.module("app",[])}(),function(){var n=function(n,o){n.joinRoom=function(n,t){var e={};e.username=n,e.room=t.toUpperCase(),o.emit("gsmConnect",e)},n.leaveRoom=function(){o.emit("gsmDisconnect",null)};var t=function(n){var t={};t.gamma=n.gamma,t.beta=n.beta,t.delta=n.delta,o.emit("deviceOrientation",t)};return{sendDeviceOrientation:t}};angular.module("app").controller("socketController",["$scope","socketService",n])}(),function(){var n=function(n){"use strict";var o=io.connect(window.location.host),t=function(t,e){o.on(t,function(){var t=arguments;n.$apply(function(){e.apply(o,t)})})},e=function(t,e,a){o.emit(t,e,function(){var t=arguments;n.$apply(function(){a&&a.apply(o,t)})})};return{on:t,emit:e,socket:o}};angular.module("app").factory("socketService",["$rootScope",n])}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImNvbnRyb2xsZXIvc29ja2V0Q29udHJvbGxlci5qcyIsInNlcnZpY2VzL3NvY2tldFNlcnZpY2UuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsInNvY2tldENvbnRyb2xsZXIiLCIkc2NvcGUiLCJzb2NrZXRTZXJ2aWNlIiwiam9pblJvb20iLCJ1c2VybmFtZSIsInJvb20iLCJkYXRhIiwidG9VcHBlckNhc2UiLCJlbWl0IiwibGVhdmVSb29tIiwic2VuZERldmljZU9yaWVudGF0aW9uIiwiZXZlbnREYXRhIiwiZ2FtbWEiLCJiZXRhIiwiZGVsdGEiLCJjb250cm9sbGVyIiwiJHJvb3RTY29wZSIsInNvY2tldCIsImlvIiwiY29ubmVjdCIsIndpbmRvdyIsImxvY2F0aW9uIiwiaG9zdCIsIm9uIiwiZXZlbnROYW1lIiwiY2FsbGJhY2siLCJhcmdzIiwiYXJndW1lbnRzIiwiJGFwcGx5IiwiYXBwbHkiLCJmYWN0b3J5Il0sIm1hcHBpbmdzIjoiQ0FHQSxXQUVBQSxRQUFBQyxPQUFBLGFDREEsV0FDQSxHQUFBQyxHQUFBLFNBQUFDLEVBQUFDLEdBTUFELEVBQUFFLFNBQUEsU0FBQUMsRUFBQUMsR0FDQSxHQUFBQyxLQUNBQSxHQUFBRixTQUFBQSxFQUNBRSxFQUFBRCxLQUFBQSxFQUFBRSxjQUNBTCxFQUFBTSxLQUFBLGFBQUFGLElBR0FMLEVBQUFRLFVBQUEsV0FDQVAsRUFBQU0sS0FBQSxnQkFBQSxNQUdBLElBQUFFLEdBQUEsU0FBQUMsR0FDQSxHQUFBTCxLQUNBQSxHQUFBTSxNQUFBRCxFQUFBQyxNQUNBTixFQUFBTyxLQUFBRixFQUFBRSxLQUNBUCxFQUFBUSxNQUFBSCxFQUFBRyxNQUNBWixFQUFBTSxLQUFBLG9CQUFBRixHQUVBLFFBQ0FJLHNCQUFBQSxHQUlBWixTQUFBQyxPQUFBLE9BQUFnQixXQUFBLG9CQUFBLFNBQUEsZ0JBQUFmLE9DOUJBLFdBRUEsR0FBQUUsR0FBQSxTQUFBYyxHQUNBLFlBRUEsSUFBQUMsR0FBQUMsR0FBQUMsUUFBQUMsT0FBQUMsU0FBQUMsTUFFQUMsRUFBQSxTQUFBQyxFQUFBQyxHQUNBUixFQUFBTSxHQUFBQyxFQUFBLFdBQ0EsR0FBQUUsR0FBQUMsU0FDQVgsR0FBQVksT0FBQSxXQUNBSCxFQUFBSSxNQUFBWixFQUFBUyxRQUtBbEIsRUFBQSxTQUFBZ0IsRUFBQWxCLEVBQUFtQixHQUNBUixFQUFBVCxLQUFBZ0IsRUFBQWxCLEVBQUEsV0FDQSxHQUFBb0IsR0FBQUMsU0FDQVgsR0FBQVksT0FBQSxXQUNBSCxHQUNBQSxFQUFBSSxNQUFBWixFQUFBUyxPQU9BLFFBQ0FILEdBQUFBLEVBQ0FmLEtBQUFBLEVBQ0FTLE9BQUFBLEdBSUFuQixTQUFBQyxPQUFBLE9BQUErQixRQUFBLGlCQUFBLGFBQUE1QiIsImZpbGUiOiJhcHAubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IE1pY2hpZWwgb24gMjUvMTEvMjAxNS5cbiAqL1xuKGZ1bmN0aW9uKCl7XG5cbiAgICB2YXIgYXBwID0gYW5ndWxhci5tb2R1bGUoXCJhcHBcIixbXSk7XG59KSgpOyIsIi8qKlxuICogQ3JlYXRlZCBieSBqdXN0aWpuZGVwb3ZlciBvbiAwOS8xMi8xNS5cbiAqL1xuXG4oZnVuY3Rpb24oKXtcbiAgICB2YXIgc29ja2V0Q29udHJvbGxlciA9IGZ1bmN0aW9uKCRzY29wZSwgc29ja2V0U2VydmljZSl7XG5cbiAgICAgICAgLy9wcml2YXRlXG5cblxuICAgICAgICAvL2Z1bmN0aW9uc1xuICAgICAgICAkc2NvcGUuam9pblJvb20gPSBmdW5jdGlvbih1c2VybmFtZSwgcm9vbSl7XG4gICAgICAgICAgICB2YXIgZGF0YSA9IHt9O1xuICAgICAgICAgICAgZGF0YS51c2VybmFtZSA9IHVzZXJuYW1lO1xuICAgICAgICAgICAgZGF0YS5yb29tID0gcm9vbS50b1VwcGVyQ2FzZSgpO1xuICAgICAgICAgICAgc29ja2V0U2VydmljZS5lbWl0KFwiZ3NtQ29ubmVjdFwiLCBkYXRhKTtcbiAgICAgICAgfTtcblxuICAgICAgICAkc2NvcGUubGVhdmVSb29tID0gZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHNvY2tldFNlcnZpY2UuZW1pdChcImdzbURpc2Nvbm5lY3RcIiwgbnVsbCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgdmFyIHNlbmREZXZpY2VPcmllbnRhdGlvbiA9IGZ1bmN0aW9uKGV2ZW50RGF0YSl7XG4gICAgICAgICAgICB2YXIgZGF0YSA9IHt9O1xuICAgICAgICAgICAgZGF0YS5nYW1tYSA9IGV2ZW50RGF0YS5nYW1tYTtcbiAgICAgICAgICAgIGRhdGEuYmV0YSA9IGV2ZW50RGF0YS5iZXRhO1xuICAgICAgICAgICAgZGF0YS5kZWx0YSA9IGV2ZW50RGF0YS5kZWx0YTtcbiAgICAgICAgICAgIHNvY2tldFNlcnZpY2UuZW1pdChcImRldmljZU9yaWVudGF0aW9uXCIsIGRhdGEpXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybntcbiAgICAgICAgICAgIHNlbmREZXZpY2VPcmllbnRhdGlvbjogc2VuZERldmljZU9yaWVudGF0aW9uXG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgYW5ndWxhci5tb2R1bGUoXCJhcHBcIikuY29udHJvbGxlcihcInNvY2tldENvbnRyb2xsZXJcIiwgW1wiJHNjb3BlXCIsIFwic29ja2V0U2VydmljZVwiLCBzb2NrZXRDb250cm9sbGVyXSk7XG5cbn0pKCk7IiwiLyoqXG4gKiBDcmVhdGVkIGJ5IGp1c3Rpam5kZXBvdmVyIG9uIDA5LzEyLzE1LlxuICovXG5cbihmdW5jdGlvbigpe1xuXG4gICAgdmFyIHNvY2tldFNlcnZpY2UgPSBmdW5jdGlvbigkcm9vdFNjb3BlKXtcbiAgICAgICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgICAgIC8vcHJpdmF0ZVxuICAgICAgICB2YXIgc29ja2V0ID0gaW8uY29ubmVjdCh3aW5kb3cubG9jYXRpb24uaG9zdCk7XG4gICAgICAgIC8vZnVuY3Rpb25zXG4gICAgICAgIHZhciBvbiA9IGZ1bmN0aW9uIChldmVudE5hbWUsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICBzb2NrZXQub24oZXZlbnROYW1lLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgICAgICAgICAgICAgJHJvb3RTY29wZS4kYXBwbHkoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjay5hcHBseShzb2NrZXQsIGFyZ3MpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgdmFyIGVtaXQgPSBmdW5jdGlvbiAoZXZlbnROYW1lLCBkYXRhLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgc29ja2V0LmVtaXQoZXZlbnROYW1lLCBkYXRhLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgICAgICAgICAgICAgJHJvb3RTY29wZS4kYXBwbHkoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrLmFwcGx5KHNvY2tldCwgYXJncyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH07XG5cbiAgICAgICAgLy9wdWJsaWNcbiAgICAgICAgcmV0dXJue1xuICAgICAgICAgICAgb246IG9uLFxuICAgICAgICAgICAgZW1pdDogZW1pdCxcbiAgICAgICAgICAgIHNvY2tldDogc29ja2V0XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgYW5ndWxhci5tb2R1bGUoXCJhcHBcIikuZmFjdG9yeShcInNvY2tldFNlcnZpY2VcIiwgW1wiJHJvb3RTY29wZVwiLCBzb2NrZXRTZXJ2aWNlXSk7XG5cbn0pKCk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
